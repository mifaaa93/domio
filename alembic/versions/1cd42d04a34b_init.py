"""init

Revision ID: 1cd42d04a34b
Revises: 
Create Date: 2025-10-24 15:15:17.077714

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1cd42d04a34b'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cities',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name_pl', sa.String(length=128), nullable=False),
    sa.Column('name_uk', sa.String(length=128), nullable=True),
    sa.Column('name_en', sa.String(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name_pl')
    )
    op.create_index('ix_cities_name_pl', 'cities', ['name_pl'], unique=False)
    op.create_table('fsm_states',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('chat_id', sa.BigInteger(), nullable=False),
    sa.Column('state', sa.String(length=128), nullable=True),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('user_id', 'chat_id')
    )
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('first_name', sa.String(length=128), nullable=True),
    sa.Column('last_name', sa.String(length=128), nullable=True),
    sa.Column('language_code', sa.String(length=8), nullable=True),
    sa.Column('registered_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_active_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('referrer_id', sa.BigInteger(), nullable=True),
    sa.Column('subscription_until', sa.DateTime(timezone=True), nullable=True, comment='Дата и время окончания подписки пользователя (UTC)'),
    sa.ForeignKeyConstraint(['referrer_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_users_is_active', 'users', ['is_active'], unique=False)
    op.create_index('ix_users_last_active_at', 'users', ['last_active_at'], unique=False)
    op.create_index('ix_users_registered_at', 'users', ['registered_at'], unique=False)
    op.create_index(op.f('ix_users_subscription_until'), 'users', ['subscription_until'], unique=False)
    op.create_table('districts',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('city_id', sa.BigInteger(), nullable=False),
    sa.Column('name_pl', sa.String(length=128), nullable=False),
    sa.Column('name_uk', sa.String(length=128), nullable=True),
    sa.Column('name_en', sa.String(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('city_id', 'name_pl', name='uq_district_city_namepl')
    )
    op.create_index('ix_districts_city', 'districts', ['city_id'], unique=False)
    op.create_index('ix_districts_name_pl', 'districts', ['name_pl'], unique=False)
    op.create_table('user_searches',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('deal_type', sa.String(length=16), nullable=True),
    sa.Column('property_type', sa.String(length=32), nullable=True),
    sa.Column('market', sa.String(length=32), nullable=True),
    sa.Column('city_id', sa.BigInteger(), nullable=True),
    sa.Column('area_min', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('area_max', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('price_min', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('price_max', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('rooms', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('pets_allowed', sa.Boolean(), nullable=True),
    sa.Column('child_allowed', sa.Boolean(), nullable=True),
    sa.Column('has_confirmed_policy', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_user_search_city', 'user_searches', ['city_id'], unique=False)
    op.create_index('ix_user_search_user_id', 'user_searches', ['user_id'], unique=False)
    op.create_table('listings',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('source', sa.String(length=32), nullable=False),
    sa.Column('source_ad_id', sa.String(length=128), nullable=False),
    sa.Column('property_type', sa.String(length=16), nullable=False),
    sa.Column('deal_type', sa.String(length=8), nullable=False),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('description_hash', sa.String(length=32), sa.Computed('md5(description)', persisted=True), nullable=True),
    sa.Column('title_en', sa.Text(), nullable=True),
    sa.Column('title_uk', sa.Text(), nullable=True),
    sa.Column('description_en', sa.Text(), nullable=True),
    sa.Column('description_uk', sa.Text(), nullable=True),
    sa.Column('is_translated', sa.Boolean(), nullable=False),
    sa.Column('url', sa.Text(), nullable=True),
    sa.Column('external_url', sa.Text(), nullable=True),
    sa.Column('city_id', sa.BigInteger(), nullable=False),
    sa.Column('district_id', sa.BigInteger(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('area_m2', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('rooms', sa.Integer(), nullable=True),
    sa.Column('price', sa.Numeric(precision=14, scale=2), nullable=True),
    sa.Column('market', sa.String(length=32), nullable=True),
    sa.Column('pets_allowed', sa.Boolean(), nullable=True),
    sa.Column('child_allowed', sa.Boolean(), nullable=True),
    sa.Column('no_comission', sa.Boolean(), nullable=True),
    sa.Column('is_sended', sa.Boolean(), nullable=False),
    sa.Column('photos', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('tg_photo_id', sa.String(length=256), nullable=True),
    sa.Column('raw', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('scraped_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_check', sa.BigInteger(), nullable=False),
    sa.CheckConstraint("deal_type IN ('rent','sale')", name='ck_deal_type'),
    sa.CheckConstraint("property_type IN ('apartment','house','room')", name='ck_property_type'),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('source', 'source_ad_id', name='uq_source_ad')
    )
    op.create_index('ix_listings_city', 'listings', ['city_id'], unique=False)
    op.create_index('ix_listings_city_deal', 'listings', ['city_id', 'deal_type'], unique=False)
    op.create_index('ix_listings_city_prop_deal_desc_hash', 'listings', ['city_id', 'property_type', 'deal_type', 'description_hash'], unique=False)
    op.create_index(op.f('ix_listings_description_hash'), 'listings', ['description_hash'], unique=False)
    op.create_index(op.f('ix_listings_last_check'), 'listings', ['last_check'], unique=False)
    op.create_index('ix_listings_price', 'listings', ['price'], unique=False)
    op.create_index('ix_listings_property_type', 'listings', ['property_type'], unique=False)
    op.create_table('user_search_districts',
    sa.Column('search_id', sa.Integer(), nullable=False),
    sa.Column('district_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['search_id'], ['user_searches.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('search_id', 'district_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_search_districts')
    op.drop_index('ix_listings_property_type', table_name='listings')
    op.drop_index('ix_listings_price', table_name='listings')
    op.drop_index(op.f('ix_listings_last_check'), table_name='listings')
    op.drop_index(op.f('ix_listings_description_hash'), table_name='listings')
    op.drop_index('ix_listings_city_prop_deal_desc_hash', table_name='listings')
    op.drop_index('ix_listings_city_deal', table_name='listings')
    op.drop_index('ix_listings_city', table_name='listings')
    op.drop_table('listings')
    op.drop_index('ix_user_search_user_id', table_name='user_searches')
    op.drop_index('ix_user_search_city', table_name='user_searches')
    op.drop_table('user_searches')
    op.drop_index('ix_districts_name_pl', table_name='districts')
    op.drop_index('ix_districts_city', table_name='districts')
    op.drop_table('districts')
    op.drop_index(op.f('ix_users_subscription_until'), table_name='users')
    op.drop_index('ix_users_registered_at', table_name='users')
    op.drop_index('ix_users_last_active_at', table_name='users')
    op.drop_index('ix_users_is_active', table_name='users')
    op.drop_table('users')
    op.drop_table('fsm_states')
    op.drop_index('ix_cities_name_pl', table_name='cities')
    op.drop_table('cities')
    # ### end Alembic commands ###
